/**
 * This class is generated by jOOQ
 */
package generated.jooq.tables


import generated.jooq.Keys
import generated.jooq.Public
import generated.jooq.tables.records.CaradvertRecord

import java.lang.Boolean
import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.time.LocalDate
import java.util.Arrays
import java.util.List
import java.util.UUID

import javax.annotation.Generated

import model.FuelType.FuelType

import org.jooq.Field
import org.jooq.Schema
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl

import repository.jooq.FuelTypeConverter
import repository.jooq.SqlDateToLocalDateConverter
import repository.jooq.UUIDConverter

import scala.Array


object Caradvert {

  /**
   * The reference instance of <code>PUBLIC.CARADVERT</code>
   */
  val CARADVERT = new Caradvert
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.8.5"
  ),
  comments = "This class is generated by jOOQ"
)
class Caradvert(alias : String, aliased : Table[CaradvertRecord], parameters : Array[ Field[_] ]) extends TableImpl[CaradvertRecord](alias, Public.PUBLIC, aliased, parameters, "") {

  /**
   * The class holding records for this type
   */
  override def getRecordType : Class[CaradvertRecord] = {
    classOf[CaradvertRecord]
  }

  /**
   * The column <code>PUBLIC.CARADVERT.ID</code>.
   */
  val ID : TableField[CaradvertRecord, UUID] = createField("ID", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), "", new UUIDConverter())

  /**
   * The column <code>PUBLIC.CARADVERT.TITLE</code>.
   */
  val TITLE : TableField[CaradvertRecord, String] = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(2147483647).nullable(false), "")

  /**
   * The column <code>PUBLIC.CARADVERT.FUEL</code>.
   */
  val FUEL : TableField[CaradvertRecord, FuelType] = createField("FUEL", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), "", new FuelTypeConverter())

  /**
   * The column <code>PUBLIC.CARADVERT.PRICE</code>.
   */
  val PRICE : TableField[CaradvertRecord, Integer] = createField("PRICE", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "")

  /**
   * The column <code>PUBLIC.CARADVERT.ISNEW</code>.
   */
  val ISNEW : TableField[CaradvertRecord, Boolean] = createField("ISNEW", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), "")

  /**
   * The column <code>PUBLIC.CARADVERT.MILEAGE</code>.
   */
  val MILEAGE : TableField[CaradvertRecord, Integer] = createField("MILEAGE", org.jooq.impl.SQLDataType.INTEGER, "")

  /**
   * The column <code>PUBLIC.CARADVERT.FIRSTREGISTRATION</code>.
   */
  val FIRSTREGISTRATION : TableField[CaradvertRecord, LocalDate] = createField("FIRSTREGISTRATION", org.jooq.impl.SQLDataType.DATE, "", new SqlDateToLocalDateConverter())

  /**
   * Create a <code>PUBLIC.CARADVERT</code> table reference
   */
  def this() = {
    this("CARADVERT", null, null)
  }

  /**
   * Create an aliased <code>PUBLIC.CARADVERT</code> table reference
   */
  def this(alias : String) = {
    this(alias, generated.jooq.tables.Caradvert.CARADVERT, null)
  }

  private def this(alias : String, aliased : Table[CaradvertRecord]) = {
    this(alias, aliased, null)
  }

  override def getSchema : Schema = Public.PUBLIC

  override def getPrimaryKey : UniqueKey[CaradvertRecord] = {
    Keys.CONSTRAINT_92
  }

  override def getKeys : List[ UniqueKey[CaradvertRecord] ] = {
    return Arrays.asList[ UniqueKey[CaradvertRecord] ](Keys.CONSTRAINT_92)
  }

  override def as(alias : String) : Caradvert = {
    new Caradvert(alias, this)
  }

  /**
   * Rename this table
   */
  def rename(name : String) : Caradvert = {
    new Caradvert(name, null)
  }
}
